// +----------------------------------------------------------------------
// | Project : ray.
// | All rights reserved.
// +----------------------------------------------------------------------
// | Copyright (c) 2013-2015.
// +----------------------------------------------------------------------
// | * Redistribution and use of this software in source and binary forms,
// |   with or without modification, are permitted provided that the following
// |   conditions are met:
// |
// | * Redistributions of source code must retain the above
// |   copyright notice, this list of conditions and the
// |   following disclaimer.
// |
// | * Redistributions in binary form must reproduce the above
// |   copyright notice, this list of conditions and the
// |   following disclaimer in the documentation and/or other
// |   materials provided with the distribution.
// |
// | * Neither the name of the ray team, nor the names of its
// |   contributors may be used to endorse or promote products
// |   derived from this software without specific prior
// |   written permission of the ray team.
// |
// | THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// | "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// | LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// | A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// | OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// | SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// | LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// | DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// | THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// | (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// | OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// +----------------------------------------------------------------------
#ifndef _H_IMAGE_TYPES_H_
#define _H_IMAGE_TYPES_H_

#include <ray/imagdef.h>

_NAME_BEGIN

typedef std::shared_ptr<class ImageHandler> ImageHandlerPtr;

enum ImageType
{
	ImageTypeUnknown,
	ImageTypeBMP,
	ImageTypeJPEG,
	ImageTypePNG,
	ImageTypeTGA,
	ImageTypeDDS,
};

enum ImageFormat
{
	ImageFormatUndefined,
	ImageFormatR4G4UNormPack8,
	ImageFormatR4G4B4A4UNormPack16,
	ImageFormatB4G4R4A4UNormPack16,
	ImageFormatR5G6B5UNormPack16,
	ImageFormatB5G6R5UNormPack16,
	ImageFormatR5G5B5A1UNormPack16,
	ImageFormatB5G5R5A1UNormPack16,
	ImageFormatA1R5G5B5UNormPack16,
	ImageFormatL8UNorm,
	ImageFormatL8SNorm,
	ImageFormatL8UScaled,
	ImageFormatL8SScaled,
	ImageFormatL8UInt,
	ImageFormatL8SInt,
	ImageFormatL8SRGB,
	ImageFormatA8UNorm,
	ImageFormatA8SNorm,
	ImageFormatA8UScaled,
	ImageFormatA8SScaled,
	ImageFormatA8UInt,
	ImageFormatA8SInt,
	ImageFormatA8SRGB,
	ImageFormatR8UNorm,
	ImageFormatR8SNorm,
	ImageFormatR8UScaled,
	ImageFormatR8SScaled,
	ImageFormatR8UInt,
	ImageFormatR8SInt,
	ImageFormatR8SRGB,
	ImageFormatL8A8UNorm,
	ImageFormatL8A8SNorm,
	ImageFormatL8A8UScaled,
	ImageFormatL8A8SScaled,
	ImageFormatL8A8UInt,
	ImageFormatL8A8SInt,
	ImageFormatL8A8SRGB,
	ImageFormatR8G8UNorm,
	ImageFormatR8G8SNorm,
	ImageFormatR8G8UScaled,
	ImageFormatR8G8SScaled,
	ImageFormatR8G8UInt,
	ImageFormatR8G8SInt,
	ImageFormatR8G8SRGB,
	ImageFormatR8G8B8UNorm,
	ImageFormatR8G8B8SNorm,
	ImageFormatR8G8B8UScaled,
	ImageFormatR8G8B8SScaled,
	ImageFormatR8G8B8UInt,
	ImageFormatR8G8B8SInt,
	ImageFormatR8G8B8SRGB,
	ImageFormatB8G8R8UNorm,
	ImageFormatB8G8R8SNorm,
	ImageFormatB8G8R8UScaled,
	ImageFormatB8G8R8SScaled,
	ImageFormatB8G8R8UInt,
	ImageFormatB8G8R8SInt,
	ImageFormatB8G8R8SRGB,
	ImageFormatR8G8B8A8UNorm,
	ImageFormatR8G8B8A8SNorm,
	ImageFormatR8G8B8A8UScaled,
	ImageFormatR8G8B8A8SScaled,
	ImageFormatR8G8B8A8UInt,
	ImageFormatR8G8B8A8SInt,
	ImageFormatR8G8B8A8SRGB,
	ImageFormatB8G8R8A8UNorm,
	ImageFormatB8G8R8A8SNorm,
	ImageFormatB8G8R8A8UScaled,
	ImageFormatB8G8R8A8SScaled,
	ImageFormatB8G8R8A8UInt,
	ImageFormatB8G8R8A8SInt,
	ImageFormatB8G8R8A8SRGB,
	ImageFormatA8B8G8R8UNormPack32,
	ImageFormatA8B8G8R8SNormPack32,
	ImageFormatA8B8G8R8UScaledPack32,
	ImageFormatA8B8G8R8SScaledPack32,
	ImageFormatA8B8G8R8UIntPack32,
	ImageFormatA8B8G8R8SIntPack32,
	ImageFormatA8B8G8R8SRGBPack32,
	ImageFormatA2R10G10B10UNormPack32,
	ImageFormatA2R10G10B10SNormPack32,
	ImageFormatA2R10G10B10UScaledPack32,
	ImageFormatA2R10G10B10SScaledPack32,
	ImageFormatA2R10G10B10UIntPack32,
	ImageFormatA2R10G10B10SIntPack32,
	ImageFormatA2B10G10R10UNormPack32,
	ImageFormatA2B10G10R10SNormPack32,
	ImageFormatA2B10G10R10UScaledPack32,
	ImageFormatA2B10G10R10SScaledPack32,
	ImageFormatA2B10G10R10UIntPack32,
	ImageFormatA2B10G10R10SIntPack32,
	ImageFormatL16UNorm,
	ImageFormatL16SNorm,
	ImageFormatL16UScaled,
	ImageFormatL16SScaled,
	ImageFormatL16UInt,
	ImageFormatL16SInt,
	ImageFormatL16SFloat,
	ImageFormatA16UNorm,
	ImageFormatA16SNorm,
	ImageFormatA16UScaled,
	ImageFormatA16SScaled,
	ImageFormatA16UInt,
	ImageFormatA16SInt,
	ImageFormatA16SFloat,
	ImageFormatR16UNorm,
	ImageFormatR16SNorm,
	ImageFormatR16UScaled,
	ImageFormatR16SScaled,
	ImageFormatR16UInt,
	ImageFormatR16SInt,
	ImageFormatR16SFloat,
	ImageFormatL16A16UNorm,
	ImageFormatL16A16SNorm,
	ImageFormatL16A16UScaled,
	ImageFormatL16A16SScaled,
	ImageFormatL16A16UInt,
	ImageFormatL16A16SInt,
	ImageFormatL16A16SRGB,
	ImageFormatR16G16UNorm,
	ImageFormatR16G16SNorm,
	ImageFormatR16G16UScaled,
	ImageFormatR16G16SScaled,
	ImageFormatR16G16UInt,
	ImageFormatR16G16SInt,
	ImageFormatR16G16SFloat,
	ImageFormatR16G16B16UNorm,
	ImageFormatR16G16B16SNorm,
	ImageFormatR16G16B16UScaled,
	ImageFormatR16G16B16SScaled,
	ImageFormatR16G16B16UInt,
	ImageFormatR16G16B16SInt,
	ImageFormatR16G16B16SFloat,
	ImageFormatR16G16B16A16UNorm,
	ImageFormatR16G16B16A16SNorm,
	ImageFormatR16G16B16A16UScaled,
	ImageFormatR16G16B16A16SScaled,
	ImageFormatR16G16B16A16UInt,
	ImageFormatR16G16B16A16SInt,
	ImageFormatR16G16B16A16SFloat,
	ImageFormatR32UInt,
	ImageFormatR32SInt,
	ImageFormatR32SFloat,
	ImageFormatR32G32UInt,
	ImageFormatR32G32SInt,
	ImageFormatR32G32SFloat,
	ImageFormatR32G32B32UInt,
	ImageFormatR32G32B32SInt,
	ImageFormatR32G32B32SFloat,
	ImageFormatR32G32B32A32UInt,
	ImageFormatR32G32B32A32SInt,
	ImageFormatR32G32B32A32SFloat,
	ImageFormatR64UInt,
	ImageFormatR64SInt,
	ImageFormatR64SFloat,
	ImageFormatR64G64UInt,
	ImageFormatR64G64SInt,
	ImageFormatR64G64SFloat,
	ImageFormatR64G64B64UInt,
	ImageFormatR64G64B64SInt,
	ImageFormatR64G64B64SFloat,
	ImageFormatR64G64B64A64UInt,
	ImageFormatR64G64B64A64SInt,
	ImageFormatR64G64B64A64SFloat,
	ImageFormatB10G11R11UFloatPack32,
	ImageFormatE5B9G9R9UFloatPack32,
	ImageFormatD16UNorm,
	ImageFormatX8_D24UNormPack32,
	ImageFormatD32_SFLOAT,
	ImageFormatS8UInt,
	ImageFormatD16UNorm_S8UInt,
	ImageFormatD24UNorm_S8UInt,
	ImageFormatD32_SFLOAT_S8UInt,
	ImageFormatBC1RGBUNormBlock,
	ImageFormatBC1RGBSRGBBlock,
	ImageFormatBC1RGBAUNormBlock,
	ImageFormatBC1RGBASRGBBlock,
	ImageFormatBC2UNormBlock,
	ImageFormatBC2SRGBBlock,
	ImageFormatBC3UNormBlock,
	ImageFormatBC3SRGBBlock,
	ImageFormatBC4UNormBlock,
	ImageFormatBC4SNormBlock,
	ImageFormatBC5UNormBlock,
	ImageFormatBC5SNormBlock,
	ImageFormatBC6HUFloatBlock,
	ImageFormatBC6HSFloatBlock,
	ImageFormatBC7UNormBlock,
	ImageFormatBC7SRGBBlock,
	ImageFormatETC2R8G8B8UNormBlock,
	ImageFormatETC2R8G8B8SRGBBlock,
	ImageFormatETC2R8G8B8A1UNormBlock,
	ImageFormatETC2R8G8B8A1SRGBBlock,
	ImageFormatETC2R8G8B8A8UNormBlock,
	ImageFormatETC2R8G8B8A8SRGBBlock,
	ImageFormatEACR11UNormBlock,
	ImageFormatEACR11SNormBlock,
	ImageFormatEACR11G11UNormBlock,
	ImageFormatEACR11G11SNormBlock,
	ImageFormatASTC4x4UNormBlock,
	ImageFormatASTC4x4SRGBBlock,
	ImageFormatASTC5x4UNormBlock,
	ImageFormatASTC5x4SRGBBlock,
	ImageFormatASTC5x5UNormBlock,
	ImageFormatASTC5x5SRGBBlock,
	ImageFormatASTC6x5UNormBlock,
	ImageFormatASTC6x5SRGBBlock,
	ImageFormatASTC6x6UNormBlock,
	ImageFormatASTC6x6SRGBBlock,
	ImageFormatASTC8x5UNormBlock,
	ImageFormatASTC8x5SRGBBlock,
	ImageFormatASTC8x6UNormBlock,
	ImageFormatASTC8x6SRGBBlock,
	ImageFormatASTC8x8UNormBlock,
	ImageFormatASTC8x8SRGBBlock,
	ImageFormatASTC10x5UNormBlock,
	ImageFormatASTC10x5SRGBBlock,
	ImageFormatASTC10x6UNormBlock,
	ImageFormatASTC10x6SRGBBlock,
	ImageFormatASTC10x8UNormBlock,
	ImageFormatASTC10x8SRGBBlock,
	ImageFormatASTC10x10UNormBlock,
	ImageFormatASTC10x10SRGBBlock,
	ImageFormatASTC12x10UNormBlock,
	ImageFormatASTC12x10SRGBBlock,
	ImageFormatASTC12x12UNormBlock,
	ImageFormatASTC12x12SRGBBlock,
	ImageFormatBeginRange = ImageFormatUndefined,
	ImageFormatEndRange = ImageFormatASTC12x12SRGBBlock,
	ImageFormatRangeSize = (ImageFormatEndRange - ImageFormatBeginRange + 1),
	ImageFormatMaxEnum = 0x7FFFFFFF
};

_NAME_END

#endif