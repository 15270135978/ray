INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/zlib)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/glew/include)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/libjpeg)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/libpng)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/lua/src)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/tinyxml/include)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/freetype/include)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/bullet/src)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/angelscript/include)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/libiconv/include)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/asJIT)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/mojoshader)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/gles/include)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/libogg)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/libvorbis)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/MyGUIEngine/include)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/MyGUIPlatform/include)
INCLUDE_DIRECTORIES(${DEPENDENCIES_PATH}/openal/include)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)

LINK_DIRECTORIES(${LIBRARY_OUTPUT_PATH})
IF(CMAKE_GENERATOR MATCHES "Win64")
    LINK_DIRECTORIES($ENV{DXSDK_DIR}/Lib/x64)
ELSE()
    LINK_DIRECTORIES($ENV{DXSDK_DIR}/Lib/x86)
ENDIF()

OPTION(BUILD_INPUT "on for use off for ignore" ON)
OPTION(BUILD_BASEGAME "on for use off for ignore" ON)
OPTION(BUILD_SCRIPT "on for use off for ignore" OFF)
OPTION(BUILD_PHYSIC "on for use off for ignore" ON)
OPTION(BUILD_GUI "on for use off for ignore" ON)
OPTION(BUILD_RENDERER "on for use off for ignore" ON)
OPTION(BUILD_SOUND "on for use off for ignore" ON)

ADD_DEFINITIONS(-D_BUILD_DLL_EXPORT)
ADD_DEFINITIONS(-D_ALLOW_KEYWORD_MACROS)

ADD_SUBDIRECTORY(libplatform)
ADD_SUBDIRECTORY(libimage)
ADD_SUBDIRECTORY(libmodel)

IF(BUILD_INPUT)
    ADD_DEFINITIONS(-D_BUILD_INPUT)
    ADD_SUBDIRECTORY(libinput)
ENDIF()

IF(BUILD_PHYSIC)
    ADD_DEFINITIONS(-D_BUILD_PHYSIC)
    ADD_SUBDIRECTORY(libphysic)
ENDIF()

IF(BUILD_SOUND)
    ADD_DEFINITIONS(-D_BUILD_SOUND)
    ADD_SUBDIRECTORY(libsound)
ENDIF()

IF(BUILD_GUI)
    ADD_DEFINITIONS(-D_BUILD_GUI)
    ADD_SUBDIRECTORY(libgui)
ENDIF()

IF(BUILD_BASEGAME)
    ADD_DEFINITIONS(-D_BUILD_BASEGAME)
ENDIF()

IF(BUILD_SCRIPT)
    ADD_DEFINITIONS(-D_BUILD_SCRIPT)
ENDIF()

IF(BUILD_RENDERER)
    ADD_DEFINITIONS(-D_BUILD_RENDERER)
    ADD_SUBDIRECTORY(librenderer)
ENDIF()

ADD_SUBDIRECTORY(engine)